public class Solution {

	public static LinkedListNode<Integer> swapNodes(LinkedListNode<Integer> head, int i, int j) {
		//Your code goes here
        // if(head==null){
        //     return head;
        // }
        // LinkedListNode<Integer> currNode=head;
        // int idx=0;
        // if(i<j){
        //     while(currNode!=null && idx<i){
        //         currNode=currNode.next;
        //         idx++;
        //     }
        //     LinkedListNode<Integer> temp=currNode;
        //     while(currNode!=null && idx<j){
        //         currNode=currNode.next;
        //         idx++;
        //     }
        //     int temp1=temp.data;
        //     temp.data=currNode.data;
        //     currNode.data=temp1;
        // }else{
        //       while(currNode!=null && idx<j){
        //           currNode=currNode.next;
        //          idx++;
        //       }
        //     LinkedListNode<Integer> temp=currNode;
        //     while(currNode!=null && idx<i){
        //          currNode=currNode.next;
        //         idx++;
        //     }
        //     int temp1=temp.data;
        //     temp.data=currNode.data;
        //     currNode.data=temp1;
        // }
        // return head;
        LinkedListNode<Integer> p1=null;
         LinkedListNode<Integer> p2=null;
         LinkedListNode<Integer> c1=null;
         LinkedListNode<Integer> c2=null;
         LinkedListNode<Integer> temp=head;
         LinkedListNode<Integer> prev=null;
        int idx=0;
        while(temp!=null){
            if(idx==i){
                p1=prev;
                c1=temp;
            }else if(idx==j){
                p2=prev;
                c2=temp;
            }
            prev=temp;
            temp=temp.next;
            idx++;
        }
        // if(i==0 || j==0){
        //     head=c2;
        //     p2.next=c1;
        //     c1.next=c2.next;
        //     c2.next=p2;
        // }else if((i-j)==1 || (j-i)==1){
        //     head=c1;
        //     p1.next=c2;
        //     c1.next=c2.next;
        //     c2.next=c1;
        // }else if(i==0 || j==0 && (i-j)==1 || (j-i)==1){
        //     c1.next=c2.next;
        //     c2.next=c1;
        // }else{
        //     p1.next=c2;
        //     p2.next=c1;
        //     c1.next=c2.next;
        //     c2.next=p2;
        // }
        // return head;
            if(p1!=null){
                p1.next=c2;
            }else{
                head=c2;
            }
            if(p2!=null){
                p2.next=c1;
            }else{
                head=c1;
            }
            LinkedListNode<Integer> temp1=c2.next;
            c2.next=c1.next;
            c1.next=temp1;
            return head; 
	}
}
