public class Solution {
    public static LinkedListNode<Integer> mergeTwoSortedLinkedLists(LinkedListNode<Integer> head1, LinkedListNode<Integer> head2) {
        //Your code goes here
        if(head1==null){
            return head2;
        }
        if(head2==null){
            return head1;
        }
        LinkedListNode<Integer> t1=head1;
        LinkedListNode<Integer> t2=head2;
        LinkedListNode<Integer> t3=null;
        LinkedListNode<Integer> h3=null;
        if(t1.data<=t2.data){
                    h3=t1;
                    t3=t1;
                    t1=t1.next;
        }else{
                    h3=t2;
                    t3=t2;
                    t2=t2.next;
        }
        while(t1!=null && t2!=null){
            if(t1.data<=t2.data){
                t3.next=t1;
                t3=t1;
                t1=t1.next;
            }else{
                t3.next=t2;
                t3=t2;
                t2=t2.next;
            }
        }
        if(t1==null){
            t3.next=t2;
        }
        if(t2==null){
            t3.next=t1;
        }
         return h3;
    }
    public static LinkedListNode<Integer> midPoint(LinkedListNode<Integer> head) {
        //Your code goes here
        if(head==null){
            return head;
        }
        LinkedListNode<Integer> hare=head;
        LinkedListNode<Integer> turtle=head;
        while(hare.next!= null && hare.next.next != null){
            hare=hare.next.next;
            turtle=turtle.next;
        }
        return turtle;
    }

	public static LinkedListNode<Integer> mergeSort(LinkedListNode<Integer> head) {
		//Your code goes here
        if(head==null || head.next==null){
            return head;
        }
        LinkedListNode<Integer> middle=midPoint(head);
        LinkedListNode<Integer> h=middle.next;
        middle.next=null;
        LinkedListNode<Integer> list1=mergeSort(h);
        LinkedListNode<Integer> list2=mergeSort(head);
        LinkedListNode<Integer> mergeList = mergeTwoSortedLinkedLists(list1,list2);
        
        return mergeList;
        
	}

}
